{"version":3,"file":"static/js/620.51c07454.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Loader/Loader.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/contacts-selector.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","redux/filter/filter-selector.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  borders,\n  flexbox,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  borders,\n  flexbox,\n  position\n);\n","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"60\"\n      radius=\"9\"\n      color=\"#198287\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{\n        justifyContent: 'center',\n        position: 'absolute',\n        top: '-10px',\n        right: '50%',\n        transform: 'translateX(50%)',\n      }}\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst StyledContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  & label {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n\n    &:not(:last-child) {\n      margin-right: ${p => p.theme.space[3]}px;\n    }\n  }\n\n  & input {\n    padding: ${p => p.theme.space[3]}px;\n    border: 1px solid grey;\n    border-radius: ${p => p.theme.radii.small};\n    margin-top: ${p => p.theme.space[1]}px;\n  }\n`;\n\nconst AddBtn = styled.button`\n  background-color: #087582;\n  color: #fff;\n  outline: none;\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  padding: 10px 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n\n  &:hover {\n    background-color: #045a63;\n  }\n`;\n\nexport { StyledContactForm, AddBtn };\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { Box } from '../Box';\nimport { StyledContactForm, AddBtn } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selector';\nimport { addContactThunk } from 'redux/contacts/contacts-thunk';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n\n    const nameAlreadyExists = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (nameAlreadyExists) return alert(`${name} is already in contacts`);\n\n    dispatch(addContactThunk(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledContactForm onSubmit={handleSubmit}>\n      <Box my={4} display=\"flex\" justifyContent=\"space-between\">\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Number:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </Box>\n      <AddBtn>Add contact</AddBtn>\n    </StyledContactForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nimport { FaUserCircle } from 'react-icons/fa';\n\nconst StyledContact = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.l}px;\n`;\nconst Name = styled.p`\n  font-size: ${p => p.theme.fontSizes.l}px;\n  margin-bottom: 3px;\n`;\n\nconst ContactIcon = styled(FaUserCircle)`\n  font-size: ${p => p.theme.fontSizes.xl}px;\n  color: #c74936;\n  margin-right: ${p => p.theme.space[3]}px;\n  margin-bottom: 3px;\n`;\n\nconst Dots = styled.div`\n  flex: 1;\n  align-self: end;\n  margin-left: ${p => p.theme.space[3]}px;\n  margin-right: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  border-bottom: 3px dotted gray;\n`;\n\nconst Number = styled.span`\n  margin-left: auto;\n  margin-right: ${p => p.theme.space[4]}px;\n`;\n\nconst DeleteBtn = styled.button`\n  width: max-content;\n  background-color: #087582;\n  color: #fff;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  border: none;\n  border-radius: ${p => p.theme.radii.small};\n  padding: 7px 12px;\n  cursor: pointer;\n  transition: all 0.3s;\n\n  &:hover {\n    background-color: #045a63;\n  }\n`;\n\nexport { StyledContact, ContactIcon, Name, Number, Dots, DeleteBtn };\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/contacts-selector';\nimport { deleteContactThunk } from 'redux/contacts/contacts-thunk';\nimport {\n  StyledContact,\n  ContactIcon,\n  Name,\n  Dots,\n  Number,\n  DeleteBtn,\n} from './Contact.styled';\n\nconst Contact = ({ contact }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const deleteContact = () => dispatch(deleteContactThunk(contact.id));\n\n  return (\n    <StyledContact>\n      <Name>\n        <ContactIcon />\n        {contact.name}\n      </Name>\n      <Dots></Dots>\n      <Number>{contact.number}</Number>\n      <DeleteBtn onClick={deleteContact} disabled={isLoading}>\n        Delete\n      </DeleteBtn>\n    </StyledContact>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: ${p => p.theme.space[5]}px;\n  padding-left: 0;\n`;\nconst NoContacts = styled.p`\n  margin-top: ${p => p.theme.space[3]}px;\n  margin-bottom: 0;\n  color: ${p => p.theme.colors.textGrey};\n`;\n\nexport { StyledList, NoContacts };\n","import { selectContacts } from 'redux/contacts/contacts-selector';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n  const filteredName = selectFilter(state);\n  const contacts = selectContacts(state);\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filteredName.toLowerCase())\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Contact from '../Contact/Contact';\nimport { NoContacts, StyledList } from './ContactList.styled';\nimport { selectFilteredContacts } from 'redux/filter/filter-selector';\nimport { getContactsThunk } from 'redux/contacts/contacts-thunk';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return contacts.length > 0 ? (\n    <StyledList>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <Contact contact={contact} />\n          </li>\n        );\n      })}\n    </StyledList>\n  ) : (\n    <NoContacts>There are no contacts yet</NoContacts>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst StyledFilter = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${p => p.theme.space[4]}px;\n\n  & input {\n    padding: ${p => p.theme.space[3]}px;\n    border: 1px solid grey;\n    border-radius: ${p => p.theme.radii.small};\n    margin-left: ${p => p.theme.space[4]}px;\n    flex: 1;\n  }\n`;\n\nexport { StyledFilter };\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selector';\nimport { selectFilter } from 'redux/filter/filter-selector';\nimport { filterAction } from 'redux/filter/filter-slice';\nimport { StyledFilter } from './Filter.styled';\n\nconst Filter = () => {\n  const filteredName = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const applyFilter = e => dispatch(filterAction(e.target.value));\n\n  return (\n    contacts.length > 0 && (\n      <StyledFilter>\n        Find contact by name:\n        <input type=\"text\" value={filteredName} onChange={applyFilter} />\n      </StyledFilter>\n    )\n  );\n};\n\nexport default Filter;\n","import { Box } from 'components/Box';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/contacts-selector';\nimport { selectLoading } from 'redux/auth/auth-selector';\n\nconst Phonebook = () => {\n  const isContactsLoading = useSelector(selectIsLoading);\n  const isAuthLoading = useSelector(selectLoading);\n  return (\n    <>\n      <Box\n        p={4}\n        mb={4}\n        border=\"1px solid #087582\"\n        borderRadius={4}\n        display=\"flex\"\n        flexDirection=\"column\"\n        position=\"relative\"\n      >\n        {isAuthLoading && <Loader />}\n        <h1 className=\"fs-2\">Phonebook</h1>\n        <ContactForm />\n      </Box>\n      <Box\n        p={4}\n        border=\"1px solid #087582\"\n        borderRadius={4}\n        display=\"flex\"\n        flexDirection=\"column\"\n        position=\"relative\"\n      >\n        {isContactsLoading && <Loader />}\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Box>\n    </>\n  );\n};\nexport default Phonebook;\n"],"names":["Box","styled","color","space","layout","borders","flexbox","position","height","width","radius","ariaLabel","wrapperStyle","justifyContent","top","right","transform","visible","StyledContactForm","p","theme","radii","small","AddBtn","normal","selectContacts","state","contacts","items","selectIsLoading","isLoading","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","onSubmit","e","preventDefault","newContact","find","contact","toLowerCase","alert","addContactThunk","my","display","type","onChange","pattern","title","required","StyledContact","fontSizes","l","Name","ContactIcon","FaUserCircle","xl","Dots","Number","DeleteBtn","m","onClick","deleteContactThunk","id","disabled","StyledList","NoContacts","colors","textGrey","selectFilter","filter","selectFilteredContacts","filteredName","includes","useEffect","getContactsThunk","length","map","StyledFilter","filterAction","isContactsLoading","isAuthLoading","selectLoading","mb","border","borderRadius","flexDirection","Loader","className"],"sourceRoot":""}